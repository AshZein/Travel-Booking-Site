{
	"info": {
		"_postman_id": "9ae3c009-3cac-4c2c-90e1-3c795939167d",
		"name": "CSC309_PP1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41683565",
		"_collection_link": "https://project-3899.postman.co/workspace/309-Project-Workspace~a4bdb63c-0cd0-49f4-8ae8-136724a8ed37/collection/41683565-9ae3c009-3cac-4c2c-90e1-3c795939167d?action=share&source=collection_link&creator=41683565"
	},
	"item": [
		{
			"name": "End-to-End Tests",
			"item": [
				{
					"name": "Setup a Hotel",
					"item": [
						{
							"name": "Step 1 Register User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"hotelUserFirstName\", pm.response.json().user.firstName);",
											"pm.collectionVariables.set(\"hotelUserLastName\", pm.response.json().user.lastName);",
											"pm.collectionVariables.set(\"hotelUserEmail\", pm.response.json().user.email);",
											"let hotelCounterEmail = pm.collectionVariables.get(\"hotelCounterEmail\");",
											"hotelCounterEmail++;",
											"pm.collectionVariables.set(\"hotelCounterEmail\", hotelCounterEmail);pm.collectionVariables.set(\"hotelUserPhoneNumber\", pm.response.json().user.phoneNumber);",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.user).to.be.an('object');",
											"    pm.expect(responseData.user).to.have.property('firstName');",
											"    pm.expect(responseData.user).to.have.property('lastName');",
											"    pm.expect(responseData.user).to.have.property('email');",
											"    pm.expect(responseData.user).to.have.property('phoneNumber');",
											"});",
											"",
											"",
											"pm.test(\"Email is in a valid format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.user.email).to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Email should be in a valid format\");",
											"});",
											"",
											"",
											"pm.test(\"Phone number is in a valid format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.user.phoneNumber).to.match(/^\\d{10}$/);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john{{hotelCounterEmail}}@test.com\", \n    \"password\": \"john123\", \n    \"phoneNumber\":\"123-233-4455\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2 Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"hotelUserAuthToken\", pm.response.json().accessToken);",
											"",
											"pm.collectionVariables.set(\"hotelUserRefreshToken\", pm.response.json().refreshToken);",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields - accessToken and refreshToken\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.accessToken).to.exist;",
											"    pm.expect(responseData.refreshToken).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"AccessToken is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData.accessToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"AccessToken should be a non-empty string\");",
											"});",
											"",
											"",
											"pm.test(\"RefreshToken is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.refreshToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john@test.com\", \n    \"password\": \"john123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/user/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"user",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 3 Create Hotel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"hotelUserHotelId\", pm.response.json().hotelId);",
											"pm.collectionVariables.set(\"hotelUserName\", pm.response.json().name);",
											"pm.collectionVariables.set(\"hotelUserAddress\", pm.response.json().address);",
											"pm.collectionVariables.set(\"hotelUserCity\", pm.response.json().city);",
											"pm.collectionVariables.set(\"hotelUserCountry\", pm.response.json().country);",
											"pm.collectionVariables.set(\"hotelUserLatitude\", pm.response.json().latitude);",
											"pm.collectionVariables.set(\"hotelUserLongitude\", pm.response.json().longitude);",
											"pm.collectionVariables.set(\"hotelUserStarRating\", pm.response.json().starRating);",
											"",
											"let hotelNameCounter = pm.collectionVariables.get(\"hotelNameCounter\");",
											"hotelNameCounter = parseInt(hotelNameCounter) + 1;",
											"pm.collectionVariables.set(\"hotelNameCounter\", hotelNameCounter.toString());",
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"HotelId is a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.hotelId).to.be.a('number');",
											"    pm.expect(responseData.hotelId).to.be.at.least(0, \"HotelId should be a non-negative integer\");",
											"});",
											"",
											"",
											"pm.test(\"Name, logo, address, city, and country should be non-empty strings\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
											"  pm.expect(responseData.logo).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Logo should not be empty\");",
											"  pm.expect(responseData.address).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Address should not be empty\");",
											"  pm.expect(responseData.city).to.be.a('string').and.to.have.lengthOf.at.least(1, \"City should not be empty\");",
											"  pm.expect(responseData.country).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Country should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Latitude and longitude are valid coordinates\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    ",
											"    pm.expect(responseData.latitude).to.be.a('number').within(-90, 90);",
											"    pm.expect(responseData.longitude).to.be.a('number').within(-180, 180);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Sunshine Resort{{hotelNameCounter}}\",\n  \"address\": \"123 Beachside Avenue, Toronto, ON, Canada, M5B 4R6\",\n  \"city\": \"Toronto\",\n  \"country\": \"Canada\",\n  \"latitude\": 37.1234,\n  \"longitude\": -122.5678,\n  \"starRating\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4 Create Hotel Room",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"hotelUserRoomId\", pm.response.json().roomId);",
											"pm.collectionVariables.set(\"hotelUserRoomType\", pm.response.json().roomType);",
											"pm.collectionVariables.set(\"hotelUserPrice\", pm.response.json().price);",
											"pm.collectionVariables.set(\"hotelUserNumberAvailable\", pm.response.json().numberAvailable);",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.roomId).to.exist;",
											"    pm.expect(responseData.hotelId).to.exist;",
											"    pm.expect(responseData.roomType).to.exist;",
											"    pm.expect(responseData.price).to.exist;",
											"    pm.expect(responseData.numberAvailable).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"RoomType is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.roomType).to.be.a('string').and.to.have.lengthOf.at.least(1, \"RoomType should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Price is a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.price).to.be.a('number');",
											"    pm.expect(responseData.price).to.be.at.least(0, \"Price should be a non-negative integer\");",
											"});",
											"",
											"",
											"pm.test(\"NumberAvailable is a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.numberAvailable).to.be.a('number');",
											"    pm.expect(responseData.numberAvailable).to.be.at.least(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hotelId\": {{hotelUserHotelId}}, \n    \"roomType\": \"single\", \n    \"price\": 100,\n    \"numberAvailable\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/room",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"room"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 5 Add Amenity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required Content-Type header\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Message is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Message is in a valid format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.message).to.be.a('string');",
											"});",
											"",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"  pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{hotelUserName}}\", \n    \"address\": \"{{hotelUserAddress}}\", \n    \"amenities\": [\"pool\", \"sauna\", \"gym\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/amenities",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"amenities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add hotel Image",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "hotel_itself",
											"type": "text"
										},
										{
											"key": "hotelId",
											"value": "{{hotelUserHotelId}}",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "/Users/ashz/Downloads/lettuce.jpeg"
										}
									]
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Hotel Logo Image",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "hotel_logo",
											"type": "text"
										},
										{
											"key": "hotelId",
											"value": "{{hotelUserHotelId}}",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "/Users/ashz/Downloads/brusselSprouts.jpeg"
										}
									]
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Hotel Room Image",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "hotel_room",
											"type": "text"
										},
										{
											"key": "hotelId",
											"value": "{{hotelUserHotelId}}",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "/Users/ashz/Downloads/potato.jpeg"
										},
										{
											"key": "roomId",
											"value": "{{hotelUserRoomId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/room/images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"room",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User Profile Image",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "hotel_itself",
											"type": "text"
										},
										{
											"key": "hotelId",
											"value": "{{hotelUserHotelId}}",
											"type": "text"
										},
										{
											"key": "files",
											"type": "file",
											"src": "/Users/ashz/Downloads/potato.jpeg"
										}
									]
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/user/images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"user",
										"images"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Register Non Hotel User",
					"item": [
						{
							"name": "Step 1 Register User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"userFirstName\", pm.response.json().user.firstName);",
											"pm.collectionVariables.set(\"userLastName\", pm.response.json().user.lastName);",
											"pm.collectionVariables.set(\"userEmail\", pm.response.json().user.email);",
											"pm.collectionVariables.set(\"userPhoneNumber\", pm.response.json().user.phoneNumber);",
											"",
											"// Increment the userCounterEmail collection variable",
											"let userCounterEmail = pm.collectionVariables.get(\"userCounterEmail\") || 0;",
											"pm.collectionVariables.set(\"userCounterEmail\", parseInt(userCounterEmail) + 1);",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"User object should have firstName, lastName, email, and phoneNumber properties\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.user).to.be.an('object');",
											"    pm.expect(responseData.user).to.have.property('firstName');",
											"    pm.expect(responseData.user).to.have.property('lastName');",
											"    pm.expect(responseData.user).to.have.property('email');",
											"    pm.expect(responseData.user).to.have.property('phoneNumber');",
											"});",
											"",
											"",
											"pm.test(\"Email is in a valid format\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.user.email).to.be.a('string').and.to.match(/\\S+@\\S+\\.\\S+/);",
											"});",
											"",
											"",
											"pm.test(\"Phone number is in a valid format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.user.phoneNumber).to.match(/^\\+\\d{1,3}-\\d{3}-\\d{3}-\\d{4}$/);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{userFirstName}}\", \n    \"lastName\": \"{{userLastName}}\", \n    \"email\": \"tomJerryuser{{userCounterEmail}}@test.com\", \n    \"password\": \"{{userPassword}}\", \n    \"phoneNumber\":\"123-263-4455\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2 Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"userAuthToken\", pm.response.json().accessToken);",
											"",
											"pm.collectionVariables.set(\"userRefreshToken\", pm.response.json().refreshToken);",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields - accessToken and refreshToken\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.accessToken).to.exist;",
											"    pm.expect(responseData.refreshToken).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"AccessToken is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.accessToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"RefreshToken is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.refreshToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"RefreshToken should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{userEmail}}\", \n    \"password\": \"{{userPassword}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/user/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"user",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Itinerary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"userItineraryRef\", pm.response.json().itineraryRef);",
											"pm.globals.set(\"userForwardFlightBookingRef\", pm.response.json().forwardFlightBookingRef);",
											"pm.globals.set(\"userReturnFlightBookingRef\", pm.response.json().returnFlightBookingRef);",
											"pm.globals.set(\"userHotelBookingRef\", pm.response.json().hotelBookingRef);",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData).to.have.property('itineraryRef');",
											"    pm.expect(responseData).to.have.property('forwardFlightBookingRef');",
											"    pm.expect(responseData).to.have.property('returnFlightBookingRef');",
											"    pm.expect(responseData).to.have.property('hotelBookingRef');",
											"});",
											"",
											"",
											"pm.test(\"ItineraryRef is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.itineraryRef).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ItineraryRef should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"ForwardFlightBookingRef, ReturnFlightBookingRef, and HotelBookingRef are null or non-empty strings\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.forwardFlightBookingRef).to.satisfy((val) => val === null || typeof val === 'string');",
											"  pm.expect(responseData.returnFlightBookingRef).to.satisfy((val) => val === null || typeof val === 'string');",
											"  pm.expect(responseData.hotelBookingRef).to.satisfy((val) => val === null || typeof val === 'string');",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{userEmail}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"itinerary"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Forward Flight Booking Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"userForwardFlightBookRef\", pm.response.json().bookingReference);",
											"pm.test(\"Response status code is 201\", function () {",
											"    pm.expect(pm.response.code).to.equal(201);",
											"});",
											"",
											"",
											"pm.test(\"Data object exists in the response\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.data).to.exist.and.to.be.an('object');",
											"});",
											"",
											"",
											"pm.test(\"Booking reference is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.data.bookingReference).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Booking reference should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Booking made date is in a valid date format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.data.bookingMade).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{userFirstName}}\", \n    \"lastName\": \"{{userLastName}}\", \n    \"email\": \"{{userEmail}}\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"f6ff7f29-5d1e-465a-b948-912c26e25da5\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/flight/booking",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"flight",
										"booking"
									]
								}
							},
							"response": [
								{
									"name": "Forward Flight Booking",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"61f85d95-87ad-40d2-86ff-d7c2a5d907ad\",\n        \"2c66b99b-ae4a-45a2-a231-a883db2ee54c\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}}",
											"path": [
												"api",
												"flight",
												"booking"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Return Flight Booking",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"20b185f3-f801-4226-b1ef-c59b74b6b97c\",\n        \"ff89b041-d78a-40fc-9861-929a4fefa99b\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}}",
											"path": [
												"api",
												"flight",
												"booking"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Create Return Flight Booking Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"userReturnFlightBookRef\", pm.response.json().bookingReference);",
											"pm.test(\"Response status code is 201\", function () {",
											"  pm.expect(pm.response.to.have.status(201));",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields - bookingReference and bookingMade\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData).to.have.property('data');",
											"    pm.expect(responseData.data).to.have.property('bookingReference');",
											"    pm.expect(responseData.data).to.have.property('bookingMade');",
											"});",
											"",
											"",
											"pm.test(\"Booking reference is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.data).to.be.an('object');",
											"    pm.expect(responseData.data.bookingReference).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Booking reference should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"BookingMade is in a valid date format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.data.bookingMade).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{userFirstName}}\", \n    \"lastName\": \"{{userLastName}}\", \n    \"email\": \"{{userEmail}}\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"bc6c87de-d69b-43d1-a872-100849b21f78\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/flight/booking",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"flight",
										"booking"
									]
								}
							},
							"response": [
								{
									"name": "Forward Flight Booking",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"61f85d95-87ad-40d2-86ff-d7c2a5d907ad\",\n        \"2c66b99b-ae4a-45a2-a231-a883db2ee54c\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}}",
											"path": [
												"api",
												"flight",
												"booking"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Return Flight Booking",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"20b185f3-f801-4226-b1ef-c59b74b6b97c\",\n        \"ff89b041-d78a-40fc-9861-929a4fefa99b\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}}",
											"path": [
												"api",
												"flight",
												"booking"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Create Hotel Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"userHotelBookRef\", pm.response.json().referenceId);",
											"pm.test(\"Response status code is 201\", function () {",
											"    pm.expect(pm.response.code).to.equal(201);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData).to.have.property('id');",
											"    pm.expect(responseData).to.have.property('userId');",
											"    pm.expect(responseData).to.have.property('referenceId');",
											"    pm.expect(responseData).to.have.property('hotelId');",
											"    pm.expect(responseData).to.have.property('roomId');",
											"    pm.expect(responseData).to.have.property('price');",
											"    pm.expect(responseData).to.have.property('checkIn');",
											"    pm.expect(responseData).to.have.property('checkOut');",
											"    pm.expect(responseData).to.have.property('bookingMade');",
											"    pm.expect(responseData).to.have.property('bookingCanceled');",
											"});",
											"",
											"",
											"pm.test(\"BookingCanceled field is a boolean\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.have.property('bookingCanceled').that.is.a('boolean');",
											"});",
											"",
											"",
											"pm.test(\"CheckIn and CheckOut dates are in the future\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.checkIn).to.be.a('string').and.to.match(/\\d{4}-\\d{2}-\\d{2}/);",
											"    pm.expect(responseData.checkOut).to.be.a('string').and.to.match(/\\d{4}-\\d{2}-\\d{2}/);",
											"    ",
											"    const today = new Date().toISOString().split('T')[0];",
											"    pm.expect(responseData.checkIn).to.be.above(today, \"CheckIn date should be in the future\");",
											"    pm.expect(responseData.checkOut).to.be.above(today, \"CheckOut date should be in the future\");",
											"});",
											"",
											"",
											"pm.test(\"Price should be a non-negative integer\", function () {",
											"  const responseData = pm.response.json();",
											"  pm.expect(responseData.price).to.be.a('number').and.to.be.at.least(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{userEmail}}\", \n    \"hotelId\": {{hotelUserHotelId}}, \n    \"roomId\": {{hotelUserRoomId}}, \n    \"price\": {{hotelUserPrice}}, \n    \"checkIn\": \"2025-04-01\", \n    \"checkOut\": \"2025-04-03\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/booking",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"booking"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Forward Flight",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"itineraryRef\": \"{{userItineraryRef}}\",\n    \"data\": { \n        \"forwardFlightBookingRef\": \"{{userForwardFlightBookRef}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"itinerary"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Return Flight",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"itineraryRef\": \"{{userItineraryRef}}\",\n    \"data\": { \n        \"returnFlightBookingRef\": \"{{userReturnFlightBookRef}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"itinerary"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Hotel Booking Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"itineraryRef\": \"{{userItineraryRef}}\",\n    \"data\": { \n        \"hotelBookingRef\": \"{{userHotelBookRef}}\" \n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"itinerary"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get List of Itineraries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is 'application/json'\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Validate the itinerary object\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('array').that.is.not.empty;",
											"  responseData.forEach(function(itinerary) {",
											"    pm.expect(itinerary).to.have.property('itineraryId').that.is.a('number');",
											"    pm.expect(itinerary).to.have.property('userId').that.is.a('number');",
											"    pm.expect(itinerary).to.have.property('forwardFlightBookingRef').that.is.null;",
											"    pm.expect(itinerary).to.have.property('returnFlightBookingRef').that.is.null;",
											"    pm.expect(itinerary).to.have.property('hotelBookingRef').that.is.null;",
											"    pm.expect(itinerary).to.have.property('itineraryRef').that.is.a('string');",
											"  });",
											"});",
											"",
											"",
											"pm.test(\"ItineraryRef is a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  responseData.forEach(function(itinerary) {",
											"    pm.expect(itinerary.itineraryRef).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ItineraryRef should not be empty\");",
											"  });",
											"});",
											"",
											"",
											"pm.test(\"Response contains the expected keys and no unexpected keys\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('array');",
											"    responseData.forEach(function(itinerary) {",
											"        pm.expect(itinerary).to.have.property('itineraryId');",
											"        pm.expect(itinerary).to.have.property('userId');",
											"        pm.expect(itinerary).to.have.property('forwardFlightBookingRef');",
											"        pm.expect(itinerary).to.have.property('returnFlightBookingRef');",
											"        pm.expect(itinerary).to.have.property('hotelBookingRef');",
											"        pm.expect(itinerary).to.have.property('itineraryRef');",
											"        pm.expect(Object.keys(itinerary).length).to.equal(6);",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary/list",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"itinerary",
										"list"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Project Part One",
			"item": [
				{
					"name": "Flights",
					"item": [
						{
							"name": "Booking",
							"item": [
								{
									"name": "Create Flight Booking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.globals.set(\"flightBookRef\", pm.response.json().bookingReference);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"61f85d95-87ad-40d2-86ff-d7c2a5d907ad\",\n        \"2c66b99b-ae4a-45a2-a231-a883db2ee54c\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/flight/booking",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"flight",
												"booking"
											]
										}
									},
									"response": [
										{
											"name": "Forward Flight Booking",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"61f85d95-87ad-40d2-86ff-d7c2a5d907ad\",\n        \"2c66b99b-ae4a-45a2-a231-a883db2ee54c\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "{{PORTNUMBER}}}",
													"path": [
														"api",
														"flight",
														"booking"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										},
										{
											"name": "Return Flight Booking",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"20b185f3-f801-4226-b1ef-c59b74b6b97c\",\n        \"ff89b041-d78a-40fc-9861-929a4fefa99b\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "{{PORTNUMBER}}}",
													"path": [
														"api",
														"flight",
														"booking"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Create Forward Flight Booking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.globals.set(\"forwardFlightBookRef\", pm.response.json().bookingReference);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"61f85d95-87ad-40d2-86ff-d7c2a5d907ad\",\n        \"2c66b99b-ae4a-45a2-a231-a883db2ee54c\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/flight/booking",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"flight",
												"booking"
											]
										}
									},
									"response": [
										{
											"name": "Forward Flight Booking",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"61f85d95-87ad-40d2-86ff-d7c2a5d907ad\",\n        \"2c66b99b-ae4a-45a2-a231-a883db2ee54c\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "{{PORTNUMBER}}}",
													"path": [
														"api",
														"flight",
														"booking"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										},
										{
											"name": "Return Flight Booking",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"20b185f3-f801-4226-b1ef-c59b74b6b97c\",\n        \"ff89b041-d78a-40fc-9861-929a4fefa99b\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "{{PORTNUMBER}}}",
													"path": [
														"api",
														"flight",
														"booking"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Create Return Flight Booking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.globals.set(\"returnFlightBookRef\", pm.response.json().bookingReference);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"20b185f3-f801-4226-b1ef-c59b74b6b97c\",\n        \"ff89b041-d78a-40fc-9861-929a4fefa99b\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/flight/booking",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"flight",
												"booking"
											]
										}
									},
									"response": [
										{
											"name": "Forward Flight Booking",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"61f85d95-87ad-40d2-86ff-d7c2a5d907ad\",\n        \"2c66b99b-ae4a-45a2-a231-a883db2ee54c\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "{{PORTNUMBER}}}",
													"path": [
														"api",
														"flight",
														"booking"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										},
										{
											"name": "Return Flight Booking",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\",\n    \"passportNumber\": \"123239938\",\n    \"flightIds\": [\n        \"20b185f3-f801-4226-b1ef-c59b74b6b97c\",\n        \"ff89b041-d78a-40fc-9861-929a4fefa99b\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:{{PORTNUMBER}}}/api/flight/booking",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "{{PORTNUMBER}}}",
													"path": [
														"api",
														"flight",
														"booking"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Get Flight Booking",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/flight/booking?email=john@test.com&bookingReference={{flightBookRef}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"flight",
												"booking"
											],
											"query": [
												{
													"key": "email",
													"value": "john@test.com"
												},
												{
													"key": "bookingReference",
													"value": "{{flightBookRef}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Forward Flight Booking",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:{{PORTNUMBER}}/api/flight/booking?email=john@test.com&bookingReference={{forwardFlightBookRef}}",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "{{PORTNUMBER}}",
													"path": [
														"api",
														"flight",
														"booking"
													],
													"query": [
														{
															"key": "email",
															"value": "john@test.com"
														},
														{
															"key": "bookingReference",
															"value": "{{forwardFlightBookRef}}"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										},
										{
											"name": "Get Flight Booking",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:{{PORTNUMBER}}/api/flight/booking?email=john@test.com&bookingReference={{returnFlightBookRef}}",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "{{PORTNUMBER}}",
													"path": [
														"api",
														"flight",
														"booking"
													],
													"query": [
														{
															"key": "email",
															"value": "john@test.com"
														},
														{
															"key": "bookingReference",
															"value": "{{returnFlightBookRef}}"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								}
							]
						},
						{
							"name": "Flights List",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/flight/list?origin=toronto&destination=Zurich&startDate=2025-04-01&endDate=2025-04-03",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"flight",
										"list"
									],
									"query": [
										{
											"key": "origin",
											"value": "toronto"
										},
										{
											"key": "destination",
											"value": "Zurich"
										},
										{
											"key": "startDate",
											"value": "2025-04-01"
										},
										{
											"key": "endDate",
											"value": "2025-04-03"
										}
									]
								}
							},
							"response": [
								{
									"name": "Forward Flight",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/flight/list?origin=toronto&destination=Zurich&startDate=2024-11-17&endDate=2024-11-17",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"flight",
												"list"
											],
											"query": [
												{
													"key": "origin",
													"value": "toronto"
												},
												{
													"key": "destination",
													"value": "Zurich"
												},
												{
													"key": "startDate",
													"value": "2024-11-17"
												},
												{
													"key": "endDate",
													"value": "2024-11-17"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Return Flights",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/flight/list?origin=Zurich&destination=Toronto&startDate=2024-11-18&endDate=2024-11-18",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"flight",
												"list"
											],
											"query": [
												{
													"key": "origin",
													"value": "Zurich"
												},
												{
													"key": "destination",
													"value": "Toronto"
												},
												{
													"key": "startDate",
													"value": "2024-11-18"
												},
												{
													"key": "endDate",
													"value": "2024-11-18"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "Hotel",
					"item": [
						{
							"name": "Booking",
							"item": [
								{
									"name": "Create Hotel Booking",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"john@test.com\",\r\n  \"hotelId\": 7,\r\n  \"roomId\": 5,\r\n  \"price\": 100,\r\n  \"checkIn\": \"2025-04-08T00:00:00Z\",\r\n  \"checkOut\": \"2025-04-12T00:00:00Z\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/booking",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"booking"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cancel booking",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/booking?referenceId=HOTEL-00012",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"booking"
											],
											"query": [
												{
													"key": "referenceId",
													"value": "HOTEL-00012"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get filtered bookings for manager",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/booking?hotelId=7&roomType=Deluxe&date=2025-03-10",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"booking"
											],
											"query": [
												{
													"key": "hotelId",
													"value": "7"
												},
												{
													"key": "roomType",
													"value": "Deluxe"
												},
												{
													"key": "date",
													"value": "2025-03-10"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Hotel room",
							"item": [
								{
									"name": "info",
									"item": [
										{
											"name": "Get detailed room info",
											"request": {
												"auth": {
													"type": "basic"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/room/info?hotelId=5&checkIn=2025-03-08&checkOut=2025-03-12",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "{{PORTNUMBER}}",
													"path": [
														"api",
														"hotel",
														"room",
														"info"
													],
													"query": [
														{
															"key": "hotelId",
															"value": "5"
														},
														{
															"key": "checkIn",
															"value": "2025-03-08"
														},
														{
															"key": "checkOut",
															"value": "2025-03-12"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create Hotel Room",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.globals.set(\"roomId\", pm.response.json().roomId);",
													"pm.globals.set(\"roomType\", pm.response.json().roomType);",
													"pm.globals.set(\"price\", pm.response.json().price);",
													"pm.globals.set(\"numberAvailable\", pm.response.json().numberAvailable);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"hotelId\": {{hotelId}}, \n    \"roomType\": \"single\", \n    \"price\": 100,\n    \"numberAvailable\": 10,\n    \"amenities\": [\"bar\", \"tv\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/room",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"room"
											]
										}
									},
									"response": []
								},
								{
									"name": "View availability of room",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/room?hotelId=7&checkIn=2025-03-10T14:00:00Z&checkOut=2025-03-15T11:00:00Z",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"room"
											],
											"query": [
												{
													"key": "hotelId",
													"value": "7"
												},
												{
													"key": "checkIn",
													"value": "2025-03-10T14:00:00Z"
												},
												{
													"key": "checkOut",
													"value": "2025-03-15T11:00:00Z"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Change availability of room",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"newRoomCount\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/room?hotelId=7&roomId=5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"room"
											],
											"query": [
												{
													"key": "hotelId",
													"value": "7"
												},
												{
													"key": "roomId",
													"value": "5"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Hotel Amenity",
							"item": [
								{
									"name": "Add Amenity",
									"request": {
										"auth": {
											"type": "basic"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": {{hotelName}}, \n    \"address\": {{hotelAddress}}, \n    \"amenities\": [\"pool\", \"sauna\", \"gym\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/amenities",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"amenities"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Amenities",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/amenities?name={{hotelName}}&address={{hotelAddress}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"amenities"
											],
											"query": [
												{
													"key": "name",
													"value": "{{hotelName}}"
												},
												{
													"key": "address",
													"value": "{{hotelAddress}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Amenities",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n   \" name\": {{hotelName}}, \n   \"address\": {{hotelAddress}}, \n   \"amenity\": \"pool\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/amenities",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"amenities"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Hotel Suggestions",
							"item": [
								{
									"name": "Hotel Suggestion",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/suggestions?city=Toronto&country=Canada",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"hotel",
												"suggestions"
											],
											"query": [
												{
													"key": "city",
													"value": "Toronto"
												},
												{
													"key": "country",
													"value": "Canada"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Hotel List",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/list?city=Toronto&checkin=2024-11-15&checkout=2024-11-17&minStarRating=1&maxStarRating=5&name=&startPrice=0&endPrice=1000000",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"list"
									],
									"query": [
										{
											"key": "city",
											"value": "Toronto"
										},
										{
											"key": "checkin",
											"value": "2024-11-15"
										},
										{
											"key": "checkout",
											"value": "2024-11-17"
										},
										{
											"key": "minStarRating",
											"value": "1"
										},
										{
											"key": "maxStarRating",
											"value": "5"
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "startPrice",
											"value": "0"
										},
										{
											"key": "endPrice",
											"value": "1000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Hotel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"hotelId\", pm.response.json().hotelId);",
											"pm.globals.set(\"hotelName\", pm.response.json().name);",
											"pm.globals.set(\"hotelAddress\", pm.response.json().address);",
											"pm.globals.set(\"hotelCity\", pm.response.json().city);",
											"pm.globals.set(\"hotelCountry\", pm.response.json().country)",
											"pm.globals.set(\"hotelLatitude\", pm.response.json().latitude);",
											"pm.globals.set(\"hotelLongitude\", pm.response.json().longitude);",
											"pm.globals.set(\"hotelStarRating\", pm.response.json().starRating);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Sunshine Resort\",\n  \"address\": \"123 Beachside Avenue, Toronto, ON, Canada, M5B 4R6\",\n  \"city\": \"Toronto\",\n  \"country\": \"Canada\",\n  \"latitude\": 37.1234,\n  \"longitude\": -122.5678,\n  \"starRating\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Detailed Hotel Info",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel?name={{hotelName}}&address={{hotelAddress}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel"
									],
									"query": [
										{
											"key": "name",
											"value": "{{hotelName}}"
										},
										{
											"key": "address",
											"value": "{{hotelAddress}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add hotel Image",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "",
											"type": "text"
										},
										{
											"key": "hotelId",
											"value": "",
											"type": "text"
										},
										{
											"key": "files",
											"type": "file",
											"src": "/Users/ashz/Downloads/potato.jpeg"
										}
									]
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Hotel Logo Image Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "hotel_logo",
											"type": "text"
										},
										{
											"key": "hotelId",
											"value": "{{hotelUserHotelId}}",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "/Users/ashz/Downloads/brusselSprouts.jpeg"
										}
									]
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Hotel Room Image Copy 2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "hotel_room",
											"type": "text"
										},
										{
											"key": "hotelId",
											"value": "{{hotelUserHotelId}}",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "/Users/ashz/Downloads/lettuce.jpeg"
										},
										{
											"key": "roomId",
											"value": "{{hotelUserRoomId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/hotel/room/images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"hotel",
										"room",
										"images"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Airport",
					"item": [
						{
							"name": "Airport Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/airport?query=toronto",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"airport"
									],
									"query": [
										{
											"key": "query",
											"value": "toronto"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User",
					"item": [
						{
							"name": "Update",
							"item": [
								{
									"name": "Update_All",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Update global variables with body input fields",
													"pm.globals.set(\"firstName\", pm.response.json().firstName);",
													"pm.globals.set(\"lastName\", pm.response.json().lastName);",
													"pm.globals.set(\"newEmail\", pm.response.json().newEmail);",
													"pm.globals.set(\"oldEmail\", pm.response.json().oldEmail);",
													"pm.globals.set(\"phoneNumber\", pm.response.json().phoneNumber);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Johnny\", \n    \"lastName\":\"Travolta\", \n    \"newEmail\": \"john_new@test.com\", \n    \"oldEmail\": \"john@test.com\",\n    \"phoneNumber\":\"999-999-9643\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/user/profile",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update_phone_number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Update global variables with body input fields",
													"pm.globals.set(\"firstName\", pm.response.json().firstName);",
													"pm.globals.set(\"lastName\", pm.response.json().lastName);",
													"pm.globals.set(\"newEmail\", pm.response.json().newEmail);",
													"pm.globals.set(\"oldEmail\", pm.response.json().oldEmail);",
													"pm.globals.set(\"phoneNumber\", pm.response.json().phoneNumber);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phoneNumber\":\"999-999-9643\",\n    \"oldEmail\": \"john@test.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/user/profile",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update_email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Update global variables with body input fields",
													"pm.globals.set(\"firstName\", pm.response.json().firstName);",
													"pm.globals.set(\"lastName\", pm.response.json().lastName);",
													"pm.globals.set(\"newEmail\", pm.response.json().newEmail);",
													"pm.globals.set(\"oldEmail\", pm.response.json().oldEmail);",
													"pm.globals.set(\"phoneNumber\", pm.response.json().phoneNumber);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"john_new@test.com\",\n    \"oldEmail\": \"john@test.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/user/profile",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update_Last_Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Update global variables with body input fields",
													"pm.globals.set(\"firstName\", pm.response.json().firstName);",
													"pm.globals.set(\"lastName\", pm.response.json().lastName);",
													"pm.globals.set(\"newEmail\", pm.response.json().newEmail);",
													"pm.globals.set(\"oldEmail\", pm.response.json().oldEmail);",
													"pm.globals.set(\"phoneNumber\", pm.response.json().phoneNumber);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"lastName\":\"Travolta\",\n    \"oldEmail\": \"john@test.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/user/profile",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update_First_Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Update global variables with body input fields",
													"pm.globals.set(\"firstName\", pm.response.json().firstName);",
													"pm.globals.set(\"lastName\", pm.response.json().lastName);",
													"pm.globals.set(\"newEmail\", pm.response.json().newEmail);",
													"pm.globals.set(\"oldEmail\", pm.response.json().oldEmail);",
													"pm.globals.set(\"phoneNumber\", pm.response.json().phoneNumber);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{authToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Johnny\",\n    \"oldEmail\": \"john@test.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/user/profile",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"user",
												"profile"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"authToken\", pm.response.json().accessToken);",
											"",
											"pm.globals.set(\"refreshToken\", pm.response.json().refreshToken);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john@test.com\", \n    \"password\": \"john123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/user/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"user",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"firstName\", pm.response.json().user.firstName);",
											"pm.globals.set(\"lastName\", pm.response.json().user.lastName);",
											"pm.globals.set(\"email\", pm.response.json().user.email);",
											"pm.globals.set(\"phoneNumber\", pm.response.json().user.phoneNumber);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"John\", \n    \"lastName\":\"Doe\", \n    \"email\": \"john@test.com\", \n    \"password\": \"john123\", \n    \"phoneNumber\":\"123-233-4455\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User Profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/user/profile?email={{email}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"user",
										"profile"
									],
									"query": [
										{
											"key": "email",
											"value": "{{email}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add User Profile Image Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{hotelUserAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "hotel_itself",
											"type": "text"
										},
										{
											"key": "hotelId",
											"value": "{{hotelUserHotelId}}",
											"type": "text"
										},
										{
											"key": "files",
											"type": "file",
											"src": "/Users/ashz/Downloads/potato.jpeg"
										}
									]
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/user/images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"user",
										"images"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Itinerary",
					"item": [
						{
							"name": "Order",
							"item": [
								{
									"name": "Verify Order",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"john@test.com\", \n    \"itineraryRef\": {{itineraryRef}}, \n    \"creditCardNumber\": \"{{creditCardNumber}}\", \n    \"creditCardExpiry\": \"{{creditCardExpiry}}\", \n    \"creditCardCVC\": \"{{creditCardCVC}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary/order",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "{{PORTNUMBER}}",
											"path": [
												"api",
												"itinerary",
												"order"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Itinerary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"itineraryRef\", pm.response.json().itineraryRef);",
											"pm.globals.set(\"forwardFlightBookingRef\", pm.response.json().forwardFlightBookingRef);",
											"pm.globals.set(\"returnFlightBookingRef\", pm.response.json().returnFlightBookingRef);",
											"pm.globals.set(\"hotelBookingRef\", pm.response.json().hotelBookingRef);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"itinerary"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Forward Flight",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"itineraryRef\": {{itineraryRef}},\n    \"data\": { \"forwardFlightBookingRef\": {{forwardFlightBookRef}}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"itinerary"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Return Flight",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"itineraryRef\": {{itineraryRef}},\n    \"data\": { \"returnFlightBookingRef\": {{returnFlightBookRef}}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"itinerary"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Hotel Booking",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"itineraryRef\": {{itineraryRef}},\n    \"data\": { \"hotelBookingRef\": {{hotelBookRef}}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/itinerary",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"itinerary"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "Reauthenticate Token",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refreshToken\": {{refreshToken}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{PORTNUMBER}}/api/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{PORTNUMBER}}",
									"path": [
										"api",
										"auth"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "hotelUserFirstName",
			"value": ""
		},
		{
			"key": "hotelUserLastName",
			"value": ""
		},
		{
			"key": "hotelUserEmail",
			"value": ""
		},
		{
			"key": "hotelCounterEmail",
			"value": ""
		},
		{
			"key": "hotelUserPhoneNumber",
			"value": ""
		},
		{
			"key": "hotelUserAuthToken",
			"value": ""
		},
		{
			"key": "hotelUserRefreshToken",
			"value": ""
		},
		{
			"key": "hotelUserHotelId",
			"value": ""
		},
		{
			"key": "hotelUserName",
			"value": ""
		},
		{
			"key": "hotelUserAddress",
			"value": ""
		},
		{
			"key": "hotelUserCity",
			"value": ""
		},
		{
			"key": "hotelUserCountry",
			"value": ""
		},
		{
			"key": "hotelUserLatitude",
			"value": ""
		},
		{
			"key": "hotelUserLongitude",
			"value": ""
		},
		{
			"key": "hotelUserStarRating",
			"value": ""
		},
		{
			"key": "hotelNameCounter",
			"value": ""
		},
		{
			"key": "hotelUserRoomId",
			"value": ""
		},
		{
			"key": "hotelUserRoomType",
			"value": ""
		},
		{
			"key": "hotelUserPrice",
			"value": ""
		},
		{
			"key": "hotelUserNumberAvailable",
			"value": ""
		},
		{
			"key": "userFirstName",
			"value": ""
		},
		{
			"key": "userLastName",
			"value": ""
		},
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "userPhoneNumber",
			"value": ""
		},
		{
			"key": "userCounterEmail",
			"value": ""
		},
		{
			"key": "userAuthToken",
			"value": ""
		},
		{
			"key": "userRefreshToken",
			"value": ""
		},
		{
			"key": "userForwardFlightBookRef",
			"value": ""
		},
		{
			"key": "userReturnFlightBookRef",
			"value": ""
		},
		{
			"key": "userHotelBookRef",
			"value": ""
		}
	]
}